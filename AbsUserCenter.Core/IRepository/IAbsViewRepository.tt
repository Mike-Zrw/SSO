<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="../../AbsUserCenter.Repository/TemplateDbhelper.ttinclude"#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using AbsUserCenter.Core.Model;
using System.Data;
using System.Data.SqlClient;
<#        
    foreach(DbTable table in DbHelper.GetDbTableViews(MyConfig.ConStr,MyConfig.DbBaseStr,MyConfig.DbTableStr)){
#>
namespace AbsUserCenter.Core.IRepository
{   
	public partial interface I<#=table.TableName#>Repository
    {
		int AddReturnId(<#=table.TableName#> model);

		int AddReturnId(<#=table.TableName#> model, SqlTransaction trans);

        int Add(<#=table.TableName#> model);

		int Add(<#=table.TableName#> model, SqlTransaction trans);

		int Modify(<#=table.TableName#> model);

		int Modify(<#=table.TableName#> model, SqlTransaction trans);
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="sqlcondi">条件形式 where id=1</param>
        /// <returns></returns>
		int Delete(string sqlcondi, params SqlParameter[] param);
		
		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="sqlcondi">条件形式 where id=1</param>
        /// <returns></returns>
        int Delete(string sqlcondi,  SqlTransaction trans, params SqlParameter[] param);

        int Delete(int id);

		int Delete(int id, SqlTransaction trans);

		/// <summary>
		/// 只读库读取数据
		/// </summary>
        <#=table.TableName#> Get(int id);
        /// <summary>
		/// 读写库读取数据
		/// </summary>
        <#=table.TableName#> GetRw(int id);
		/// <summary>
		/// 带事物库读取数据
		/// </summary>
        //<#=table.TableName#> Get(int id, SqlTransaction trans);
		/// <summary>
		/// 只读库读取数据
		/// </summary>
        List<<#=table.TableName#>> GetAll();
		/// <summary>
		/// 读写库读取数据
		/// </summary>
        List<<#=table.TableName#>> GetAllRw();
		/// <summary>
        /// 只读库读取数据
        /// </summary>
        /// <param name="trans"></param>
        /// <param name="Condi">条件</param>
        /// <param name="param">参数</param>
        /// <returns></returns>
        List<<#=table.TableName#>> GetAll(string Condi, params SqlParameter[] param);
		/// <summary>
        /// 读写库读取数据
        /// </summary>
        /// <param name="trans"></param>
        /// <param name="Condi">条件</param>
        /// <param name="param">参数</param>
        /// <returns></returns>
        List<<#=table.TableName#>> GetAllRw(string Condi, params SqlParameter[] param);
		/// <summary>
        /// 只读库读取数据 分页
        /// </summary>
        /// <param name="Condi">条件</param>
        /// <param name="order">排序字段</param>
        /// <param name="start">开始条数</param>
        /// <param name="limit">读取条数</param>
        /// <param name="param">参数</param>
        /// <returns></returns>
        List<<#=table.TableName#>> GetAll(string Condi, string order, long start, long limit, out long count, params SqlParameter[] param);
		/// <summary>
        /// 读写库读取数据 分页
        /// </summary>
        /// <param name="Condi">条件</param>
        /// <param name="order">排序字段</param>
        /// <param name="start">开始条数</param>
        /// <param name="limit">读取条数</param>
        /// <param name="param">参数</param>
        /// <returns></returns>
        List<<#=table.TableName#>> GetAllRw(string Condi, string order, long start, long limit, out long count, params SqlParameter[] param);
        /// <summary>
		/// 带事物库读取数据
		/// </summary>
        List<<#=table.TableName#>> GetAll(SqlTransaction trans);
	    /// <summary>
        /// 带事物库读取数据
        /// </summary>
        /// <param name="trans"></param>
        /// <param name="Condi">条件</param>
        /// <param name="param">参数</param>
        /// <returns></returns>
		List<<#=table.TableName#>> GetAll(SqlTransaction trans,string Condi, params SqlParameter[] param);
    }
}
<#   
    }            
#>

<#+
    public class MyConfig
    {
        public static readonly string ConStr=config.ViewConnectionString;
        public static readonly string DbBaseStr=config.ViewDbDatabase;
		public static readonly string DbTableStr=config.ViewDbTables;
    }
#>